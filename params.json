{
  "name": "macholibre",
  "tagline": "Mach-O & Universal Binary Parser",
  "body": "# macholibre\r\n\r\n## Description\r\nmacholibre is a Mach-O and Universal binary parser.  It extracts information \r\nsuch as architectures, load commands, dynamic libraries, symbols, function \r\nimports, and tons more.  Then it packs all of that information into JSON for \r\nease of analysis and integration.\r\n\r\n## Dependencies\r\nI tried to make this tool with as little external dependencies as possible, and\r\nI think I did pretty well on that front.  The only module I import is for parsing\r\nCMS signatures.  I've configured the setup.py to automatically install it with\r\nthe module, but you can also install it seperately with pip or manually from github.\r\n* [Python 2.7](https://www.python.org/download/releases/2.7/)\r\n  - [ctypescrypto](https://github.com/vbwagner/ctypescrypto)\r\n    + ctypescrypto depends on openssl under the hood, on linux it should be\r\n      installed by default but on other OS's you might have to do this\r\n      yourself.  Anyways, make sure the version you install has CMS capabilities.\r\n\r\n## How To\r\n\r\n### Installation\r\nI recommend using pip to install macholibre.\r\n```bash\r\npip install git+https://github.com/aaronst/macholibre.git\r\n```\r\n\r\n#### OS X USERS: IMPORTANT NOTES\r\nIf you run into any errors while using macholibre on OS X, try the following\r\nbefore creating a ticket.\r\n\r\nMake sure your version of OpenSSL is up to date with `openssl version`.\r\nmacholibre has been confirmed working with `OpenSSL 1.0.2h  3 May 2016`.\r\n```\r\nbrew update\r\nbrew install openssl\r\nbrew link --force openssl\r\n```\r\n\r\npip may install an old version of the ctypescrypto dependency that crashes on OS X.\r\nIn order to fix this you'll need to install the current version from github.\r\n```bash\r\npip uninstall ctypescrypto\r\npip install git+https://github.com/vbwagner/ctypescrypto.git\r\n```\r\n\r\n### Usage\r\n#### As a Module\r\n```python\r\nfrom macholibre import macholibre\r\n\r\n# mach-o file path\r\npath = '/home/aaron/my_macho'\r\n\r\n# return json\r\njson_data = macholibre.parse(path)\r\n\r\n# write json to file\r\nout_file = open('/home/aaron/macholibre_output.json', 'w')\r\nmacholibre.parse(path, f=out_file)\r\n```\r\n\r\n#### As a Script\r\n```python\r\npython macholibre.py (-r <directory|glob> | <file>) [options]\r\n```\r\n\r\n##### Options\r\n* -h: Help\r\n* -r: Parse directory of glob\r\n* -o: Specify output file\r\n\r\n##### Note\r\nFor single files, make sure you put the filename first, before any options.  \r\nAlso, globs need to be in quotes and paths need to be absolute.\r\n\r\n##### Examples\r\n\r\n###### Single File\r\n```python\r\npython macholibre.py otool -o otool.json\r\n```\r\n\r\n###### Glob\r\n```python\r\npython macholibre.py -r \"machos/*\" -o machos.json\r\n```\r\n\r\n## Output Format\r\nmacholibre formats all of its output into a JSON blob.  Check out\r\n[app_store.json](app_store.json) as an example using the App Store app.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}